---
title: "Class 9: Halloween Mini-Project"
author: "Claire Lua A16922295"
format: pdf
toc: true
---

Today we will take a wee setp back to some data we can taste and explore the correlation structure and principal components of some halloween candy.

## 1. Data Import

```{r}
candy_file <- "candy-data.txt"
candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity == 1)
```


## 2. What is your favorite candy?

> Q3. What is your favorite candy in the dataset and what is it's winpercent value?

```{r}
candy["Twix",]$winpercent
```

> Q4. What is the winpercent value for "Kit Kat"?

```{r}
candy["Kit Kat",]$winpercent
```

> Q5. What is the winpercent value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```


## 3. Exploratory Analysis

We can use the **skimr** package to get a quick overview of a given dataset. This can be useful for the first time your encounter a new dataset. 

```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

It looks like the last column `candy$winpercent` is on a different scale to all others.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

It is representing whether the candy is a chocolate type. 1 means it is, while 0 means it is not.

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

> Q9. Is the distribution of winpercent values symmetrical?

No.

> Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```

The median appears to be lower than 50%

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
choc.inds <- candy$chocolate == 1
choc.candy <- candy[choc.inds,]
choc.win <- choc.candy$winpercent
mean(choc.win)

fru.inds <- candy$fruity == 1
fru.candy <- candy[fru.inds,]
fru.win <- fru.candy$winpercent
mean(fru.win)
```


> Q12. Is this difference statistically significant?

```{r}
ans <- t.test(choc.win, fru.win)
ans
```
```{r}
ans$p.value
```

Yes, with a P-value of `r ans$p.value`.


> Q13. What are the five least liked candy types in this set?

There are two related functions that can help here, one is the classic `sort()` and `order()`

```{r}
x <- c(5,10,1,4)
sort(x)
```

```{r}
order(x)
```

```{r}
inds <- order(candy$winpercent)
head(candy[inds,],5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[inds,],5)
```

> Q15. Make a first barplot of candy ranking based on winpercent values

```{r}
library(ggplot2)

ggplot(candy) +
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) +
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```

```{r}
my_cols=rep("yellow", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "lightgreen"
my_cols[as.logical(candy$bar)] = "lightblue"
my_cols[as.logical(candy$fruity)] = "pink"

ggplot(candy) +
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols)
```
Here we want a custom color vector to color each bar the way we want - with `chocolate` and `fruity` candy together with whether it is a `bar` or not

```{r}
mycols <- rep("gray", nrow(candy))
mycols[as.logical(candy$chocolate)] <- "chocolate"
mycols[as.logical(candy$fruity)] <- "pink"
mycols[as.logical(candy$bar)] <- "brown"

ggplot(candy) +
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=mycols)

ggsave("mybarplot.png", width=5, height=8)
```

![My silly barplot image](mybarplot.png)
> Q17. What is the worst ranked chocolate candy?
  
  Sixiets

> Q18. What is the best ranked fruity candy?

  Nik L Nip

  
## 4. Winpercent vs. Pricepercent

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 15)
```

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```
> Q19. Which candy type is the highest ranked in terms of `winpercent` for the least money - i.e. offers the most bang for your buck?

  Tootsie Roll Midgies

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

  Nik L Nip, Nestle Smarties, Ring pop,     Hershey's Krackel, and Hershey's Milk Chocolate. Nik L Nip is the least popular


## 5. Correlation Structure

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)
cij
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate & fruity.

```{r}
round(cij["chocolate", "fruity"], 2)
```


> Q23. Similarly, what two variables are most positively correlated?

Chocolate & winpercent.

```{r}
round(cij["chocolate", "winpercent"], 2)
```


## 6. Principal Compunent Analysis (PCA)

We need to be sure to scale our input `candy` data before PCA as we have the `winpercent` column on a different scale to all others in the dataset.

```{r}
pca <- prcomp(candy, scale=T)
summary(pca)
```

First main result figure is my "PCA plot"

```{r}
ggplot(pca$x) +
  aes(PC1, PC2, label=rownames(pca$x)) +
  geom_point(col=mycols) +
  geom_text_repel(max.overlaps = 6, col=mycols) + 
  theme_bw()
  
```

The second main PCA result is in the `pca$rotation` we can plot this to generate a so-called "loadings" plot.

```{r}
ggplot(pca$rotation) +
  aes(PC1, reorder(rownames(pca$rotation), PC1), fill=PC1) +
  geom_col()
```

> Q24. What original variables are pickedup strongly by PC1 in the positive direction? Do these make sense to you?

- Fruity is picked up stronghly by PC1 in the positive direction. This make sense because it is being separated from the popular chocolate variables. 
