---
title: "Class 8 Mini-Project"
author: "Claire Lua  A16922295"
format: pdf
toc: true
---

## 1. Exploratory Data Analysis

```{r}
fna.data <- "WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```

```{r}
wisc.data <- wisc.df[,-1]
diagnosis <- factor(wisc.df$diagnosis)
```

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

> Q2. How many of the observations have a malignant diagnosis?

```{r}
table(diagnosis) ["M"]
```

> Q3. How many variables/features in the data are suffixed with `_mean`?

```{r}
length(grep("_mean$", colnames(wisc.data)))
```


## 2. Principal Component Analysis

```{r}
colMeans(wisc.data)
apply(wisc.data,2,sd)
```
```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by PC1?

```{r}
summary(wisc.pr)$importance[2,1]
```


> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

```{r}
which(summary(wisc.pr)$importance[3,] >= 0.7)[1]
```


> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
which(summary(wisc.pr)$importance[3,] >= 0.9)[1]
```

```{r}
biplot(wisc.pr)
```
> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

This plot is extremely messy and contains a large number of results, which makes it hard to interpret.


```{r}
#PC1 vs PC2
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis,
     xlab = "PC1", ylab = "PC2")
```

```{r}
#PC1 vs PC3
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = diagnosis,
     xlab = "PC1", ylab = "PC3")
```

```{r}
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

library(ggplot2)

ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point() +
  labs(x = "PC1", y = "PC2")
```

```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
pve <- pr.var / sum(pr.var)

plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

The component of the loading vector such as wisc.pr$rotation[,1] retrieves the loadings for PC1. These loadings are able to tell us how much each feature contributes to a particular principal component.


> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
which(summary(wisc.pr)$importance[3,] >= 0.8) [1]
```


## 3. Hierarchical clustering

```{r}
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method = "complete")
```

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=100, col="red", lty=2)
```

```{r}
plot(wisc.hclust)
abline(h=100, col="red", lty=2)
wisc.hclust.clusters <- cutree(wisc.hclust, k=8)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```
> Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

> Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

```{r}
plot(hclust(data.dist, method = "single"), main = "Single Linkage")
plot(wisc.hclust, main = "Complete Linkage")
plot(hclust(data.dist, method = "average"), main = "Average Linkage")
plot(hclust(data.dist, method = "ward.D2"), main = "Ward.D2 Linkage")
```
My favorite is the ward.d2 method. I think it shows the cluster results in a more organized and balanced way.


## 5. Combining Methods

```{r}
pc90 <- which(summary(wisc.pr)$importance[3,] >= 0.9)[1]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:pc90]), method = "ward.D2")

grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```
```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```
```{r}
wisc.pr.hclust.clusters <- grps
table(wisc.pr.hclust.clusters, diagnosis)
```
> Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
wisc.km <- kmeans(wisc.data, centers=4)
table(wisc.km$cluster, diagnosis)
```


## 6. Sensitivity/Specificity

> Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

I think the k-means clustering show higher sensitivity, while the hierarchical clustering shows higher specificity.


## 7. Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q18. Which of these new patients should we prioritize for follow up based on your results?

Cluster 1 should be priortized for follow up.





