---
title: "Class 5: Data Viz & ggplot"
author: "Claire Lua  A16922295"
format: pdf
toc: true
---

# Background

There are many graphics systems available in R. These include "base" R and tons of add on packages like **ggplot2**.

Let's compare "base" and **ggplot2** briefly. We can use some example data that is built-in with R called `cars`:

```{r}
head(cars)
```

In base R I can just call `plot()`

```{r}
plot(cars)
```

How can we do this with **ggplot2**

First we need to install the package. We do this `install.packages("ggplot2")`. I only need to do this once and then it will be available on my computer from then on.

> **Key point**: I only install packages in the R console not within quarto docs or Rscripts

Before I use any add-on package I must load it up with a call to `library()`

```{r}
library(ggplot2)
ggplot(cars)
```

Every ggplot has at least 3 things:

- the **data** (in our case `cars`)
- the **aes**thetics (how the data map to the plot)
- the **geom**s that determine how the plot is drawn (lines, points, columns, etc.)

```{r}
ggplot(cars) + 
  aes(x=speed, y=dist)
```

```{r}
ggplot(cars) + 
  aes(x=speed, y=dist) +
  geom_point()
```

For "simple" plots ggplot is much more verbose than base R but the defaults are nicer and for complicated plots it becomes much more efficient and structured.

> Q. Add a line to show the relationship of speed to stopping distance (i.e. add another "layer")

```{r}
p <- ggplot(cars) + 
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(se=FALSE, method="lm")
```

I can always save any ggplot object (i.e. plot) and use it later for adding more layers.
```{r}
p
```

> Q. Add a title and suntitle to the plot

```{r}
p + labs(title = "My First ggplot", subtitle = "Stopping distance of old cars", caption = "BIMM143", x="Speed (MPG)", y="Stopping Distance (ft)") +
  theme_light()
```

# Gene Expression Plot

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)

```

> Q. How many genes are in this wee dataset?

```{r}
nrow(genes)
```

> Q. How many columns are there? What are the names?

```{r}
colnames(genes)
ncol(genes)
```

> Q. How many "up" and "down" regulated genes are there?

```{r}
table(genes$State)
```

> Q. What fraction of total genes is up-regulated in the dataset?


## Custom Color Plot
> Q. Make a first plot of this data

```{r}
ggplot(genes) + 
  aes(x=Condition1, y=Condition2, col=State) +
  scale_color_manual(values=c("pink", "yellow","purple")) +
  geom_point() +
  labs(title="Gene Expression Changes Upon Drug Treatment", x="Control (no drug)", y="Drug treated") +
  theme_bw()
```

# Car Type Plot

Let's plot some aspects of the in-built `mtcars` dataset

```{r}
head(mtcars)
```

> Q. Scatter plot of `mpg` vs `disp`

```{r}
p1 = ggplot(mtcars) + 
  aes(mpg, disp) +
  geom_point()+
  theme_bw()

p1
```

> Q. Box plot of `gear` vs `disp`

```{r}
p2 = ggplot(mtcars) + 
  aes(x=gear, y=disp, group = gear) +
  geom_boxplot() +
  theme_bw()

p2
```


> Q. Bar plot of `carb`

```{r}
p3 = ggplot(mtcars) + 
  aes(carb) +
  geom_bar() +
  theme_bw()

p3
```


> Q. Smooth of `disp` vs `qsec`

```{r}
p4 = ggplot(mtcars) + 
  aes(disp, qsec) +
  geom_smooth() +
  theme_bw()

p4
```

I want to combine all these plots into one figure with multiple pannels.

We can use the **patchwork** package to do this

```{r}
library(patchwork)

(p1 / p2 | p3 / p4)
```

```{r}
ggsave(filename="myplot.png", width=5, height=3)
```


#Country Population Data Plot

And a wee peak

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
```

```{r}
head(gapminder)
```

> Q. How many countries are in this dataset?

```{r}
length(table(gapminder$country))
```

> Q. Plot gdpPercap vs lifeExp color by continent

```{r}
ggplot(gapminder) + 
  aes(gdpPercap, lifeExp, colour = continent) +
  geom_point(alpha=0.3) +
  facet_wrap(~continent)
  theme_bw()
```















